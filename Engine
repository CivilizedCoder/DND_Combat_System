import java.util.ArrayList;
public class Engine {
	private ArrayList<String> story = new ArrayList<String>();
	private int winner = 1;

	public static void main (String [] args) {
		Engine e = new Engine();
		e.go();
	}
	
	public void go() {
		//timing iterations in millions, reducing strain on system and delays due to excessive screen writing.
		int tick = 0;
		int M = 0;
		while(winner == 1 && M < 100) {
			++tick;
			if(tick == 1000000) {
				M ++;
				System.out.println(M);
				tick = 0;
			}
			story.clear();
			play();
		}
		System.out.println("Iteration: " + (tick + (1000000*M)) + "." );
		
		for (int i = 0; i < story.size(); ++i) {
			System.out.println(story.get(i));
		}
	}
	
	public void play() {
		Creature r = new Creature               (0,                       10,    1,      1,      1,        1,      1);
		/*
		Commoner:
		Creature david = new Creature           (r.roll(8),               10,    1,      4,      0,        2,      0); 
		
		Black Dragon Wyrmling:             
		Creature goliath = new Creature         (r.roll(6, 8, 6),         17,    1,     10,      2,        4,      2); 
		
		Owlbear:
		Creature goliath = new Creature         (r.roll(7, 10, 21),       13,    1,     10,      5,        7,      1);
		david.damage(r.roll(2, 8, 5)); (multiattack)
		

		*/           
		//Initialization                   	     HP,                      AC,   numDie, dmgDie, dmgBonus, toHit, init
		//Creature goliath = new Creature         (r.roll(7, 10, 21),       13,    1,     10,      5,        7,      1); //Owlbear
		Creature goliath = new Creature         (r.roll(6, 8, 6),         17,    1,     10,      2,        4,      2);
		Creature david = new Creature           (r.roll(8),               10,    1,      4,      0,        2,      0); //Commoner
		//NOTE: only one attack is automatically implemented. For multiattack, see line 127-140. 
		story.add("Our Goliath starts with " + goliath.getHP() + " hit points,\n" + "David has but " + david.getHP() + ".");
		
		//Initiative and turns
		int next;
		goliath.roll(20, goliath.getInitiative());
		david.roll(20, david.getInitiative());
		while(goliath.D() == david.D()) {
			goliath.roll(20, goliath.getInitiative());
			david.roll(20, david.getInitiative());
		}
		
		if (david.D() > goliath.D()) {
			next = 0;
			story.add("David wins the initiative roll with " + david.D() + " to goliath's " + goliath.D() + "\n");
		}
		else {
			next = 1;
			story.add("Goliath wins the initiative roll with " + goliath.D() + " to David's " + david.D() + "\n");

		}

		//looped fights until death of creature
		int damage;
		boolean crit = false;
		while(david.getHP() > 0 && goliath.getHP() > 0) {
			story.add("");
			story.add("David HP: " + david.getHP() + "     Goliath HP: " + goliath.getHP());

			if(next == 0) {
				if(david.hit(goliath)) {
					if(david.D() == 20) {
						story.add("David crits: " + david.D() + "!");
						crit = true;
					}
					else {
						story.add("David hits: " + david.D());
						}
					damage = goliath.getHP();
					goliath.damage(david.roll(david.getDmgD(), david.getDmgBonus()));
					damage -= goliath.getHP();
					if(crit) {
						goliath.damage(damage);
						story.add("deals " + damage*2 + " damage (" + goliath.getHP() + " remains).");
						crit = false;
					}
					else {
						story.add("deals " + damage + " damage (" + goliath.getHP() + " remains).");
					}
				}
				else {
					story.add("David misses: " + david.D());
				}
				next = 1;
			}
			else {
				if(goliath.hit(david)) {
					if(goliath.D() == 20) {
						story.add("Goliath crits: 20!");
						crit = true;
					}
					story.add("Goliath hits: " + goliath.D());
					damage = david.getHP();
					david.damage(goliath.roll(goliath.getDmgD(), goliath.getDmgBonus()));
					damage -= david.getHP();
					if(crit) {
						david.damage(damage);
						story.add("dealing " + damage*2 + " damage!");
						crit = false;
					}
					else {
						story.add("dealing " + damage + " damage.");
					}
				}
				else {
					story.add("David dodges: " + goliath.D());
				}
				//Multiattack will be implemented here. Entire block can be reproduced as necessary
				/*     
				if(goliath.hit(david)) {
					damage = david.getHP();
					david.damage(r.roll(2, 8, 5)); //insert alternative attack here
					damage -= david.getHP();
					if(goliath.D() != 20) {
						story.add("David is hit (multiattack): " + goliath.D() + ", and takes " + damage + " damage.");	
					}
					else {
						david.damage(damage);
						story.add("David takes a crit (multiattack): " + goliath.D() + ", and takes " + damage*2 + "damage.");
					}
				}
				    */
				next = 0;
			}
		}
		if(david.getHP()>0) {
			//End simulation upon a david victor
			winner = 0;
		}
	}
}
